plugins {
    id 'com.android.application'
}

boolean betaVer = true

android {

    namespace 'com.RobinNotBad.BiliClient'
    //noinspection GradleDependency
    compileSdk 33

    sourceSets {
        main{
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        applicationId "com.RobinNotBad.BiliClient"
        minSdk 10
        //noinspection ExpiredTargetSdkVersion
        targetSdk 26
        versionCode 20240630
        versionName "2.6.1"

        if (betaVer) {
            versionName += "-BETA-" + versionCode
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'armeabi-v7a','x86'
        }
    }

    signingConfigs {
        release {
            def localProps = project.rootProject.file("local.properties")
            if (localProps.exists() && new Properties() {{
                load(localProps.newDataInputStream())
            }}.hasProperty("KEY_PATH")) {
                storeFile file(pro.getProperty("KEY_PATH") != null ? pro.getProperty("KEY_PATH") : "key.jks")
                storePassword pro.getProperty("KEY_PASSWORD")
                keyAlias pro.getProperty("ALIAS_NAME")
                keyPassword pro.getProperty("ALIAS_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "BETA", String.valueOf(betaVer)
            buildConfigField "boolean", "LOG_DEBUG", "true"
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            def localProps = project.rootProject.file("local.properties")
            if (localProps.exists() && new Properties() {{
                load(localProps.newDataInputStream())
            }}.hasProperty("KEY_PATH")) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            buildConfigField "boolean", "BETA", String.valueOf(betaVer)
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_9
        targetCompatibility JavaVersion.VERSION_1_9
    }

    packagingOptions {
        exclude 'META-INF/androidx.cardview_cardview.version'
    }
    buildFeatures {
        viewBinding false
    }
}

dependencies {
    implementation 'com.google.zxing:core:3.5.0'
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.5.1'
    //noinspection GradleDependency
    implementation 'com.google.android.material:material:1.9.0'
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    //noinspection GradleDependency
    implementation 'org.jsoup:jsoup:1.10.2'
    //noinspection GradleCompatible
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'org.greenrobot:eventbus:3.2.0'
    // Geetest
    implementation 'com.geetest.sensebot:sensebot:4.4.2.1'
    //danmaku
    //implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    //implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    //implementation 'com.github.ctiao:ndkbitmap-x86:0.9.21'
    //ijk
    implementation project(path: ':ijkplayer-java')
    implementation project(path: ':DanmakuFlameMaster')
    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
}
